###############################################################################
# Name:		kill_instance.{{ instance_name }}.sh
# Author:	Rodney Marable <rodney.marable@gmail.com>
# Created On:	June 3, 2019
# Last Changed:	June 16, 2019
# Deployed On:	{{ lookup('pipe','date \"+%B %-d, %Y\"') }}
# Purpose:	Destroy EC2 instance {{ instance_name }}
###############################################################################

#!/bin/sh

# Set the path to the source tree.

SRC_TREE_DIR="`git rev-parse --show-toplevel`"

# Set some critical paths and variables.

INSTANCE_NAME={{ instance_name }}
INSTANCE_DATA_DIR={{ instance_data_dir }}
EC2_KEYPAIR={{ ec2_keypair }}
SSH_KEYPAIR_FILE={{ ssh_keypair_file }}
SNS_TOPIC_ARN="{{ sns_arn }}"
PRESERVE_IAM_ROLE="{{ preserve_iam_role }}"

# Pause for 5 seconds before deleting anything.

echo ""
{% if count > 1 %}
echo "EC2 instance family \"{{ instance_name }}\" is marked for termination."
{% else %}
echo "EC2 instance \"{{ instance_name }}\" is marked for termination."
{% endif %}
echo ""
echo "################################################################################"
echo "################  Please type CTRL-C within 5 seconds to abort  ################"
echo "################################################################################"
sleep 5
echo ""
echo "Destroying instance: {{ instance_name }}"
echo ""

# Destroy the instance created by Terraform.

cd $INSTANCE_DATA_DIR
{% if request_type == 'ondemand' %}
{% if debug_mode == 'true' %}TF_LOG=DEBUG {% endif %}terraform destroy -auto-approve -target=aws_instance.${INSTANCE_NAME}
{% else %}
{% if debug_mode == 'true' %}TF_LOG=DEBUG {% endif %}terraform destroy -auto-approve -target=aws_spot_instance_request.${INSTANCE_NAME}
{% endif %}
cd $SRC_TREE_DIR

# Delete the ec2_keypair and PEM files associated with this instance family.

aws ec2 delete-key-pair --key-name $EC2_KEYPAIR
echo "Deleted EC2 keypair: $EC2_KEYPAIR"
for file in $INSTANCE_DATA_DIR/$SSH_KEYPAIR_FILE $SRC_TREE_DIR/$SSH_KEYPAIR_FILE
do
	if [ -f $file ]
	then
		rm $file
		echo "Deleted SSH keypair file: $file"
	fi
done

# Delete the instance data directory.

if [ -d $INSTANCE_DATA_DIR ]
then
	rm -rf $INSTANCE_DATA_DIR
	echo "Deleted directory: $INSTANCE_DATA_DIR"
fi

# Delete the SNS topic.

aws sns delete-topic --topic-arn $SNS_TOPIC_ARN
echo "Deleted SNS topic: $SNS_TOPIC_ARN"

# If PRESERVE_IAM_ROLE is false:
# 	- Delete the IAM EC2 instance policy.
# 	- Remove the IAM role from the EC2 instance profile.
# 	- Delete the IAM EC2 instance profile and role.

if [[ $PRESERVE_IAM_ROLE="false" ]]
then
	aws iam delete-role-policy --role-name {{ ec2_iam_instance_role }} --policy-name {{ ec2_iam_instance_policy }}
	echo "Deleted IAM EC2 policy: {{ ec2_iam_instance_policy }}"
	aws iam remove-role-from-instance-profile --instance-profile-name {{ ec2_iam_instance_profile }} --role-name {{ ec2_iam_instance_role }}
	aws iam delete-instance-profile --instance-profile-name {{ ec2_iam_instance_profile }}
	aws iam delete-role --role-name {{ ec2_iam_instance_role }}
	echo "Deleted IAM EC2 instance profile: {{ ec2_iam_instance_profile }}"
	echo "Deleted IAM role: {{ ec2_iam_instance_role }}"
else
	echo "Preserved EC2 IAM instance policy: {{ ec2_iam_instance_policy }}"
	echo "Preserved EC2 IAM instance role: {{ ec2_iam_instance_role }}"
	echo "Preserved EC2 IAM instance profile: {{ ec2_iam_instance_profile }}"
fi

# Remove config files and directories associated with {{ instance_name }}.

for file in {{ vars_file_path }} {{ instance_serial_number_file }}
do
	if [ -f $file ]
	then
		rm $file
		echo "Deleted file: $file"
	fi
done

# Delete references to the kill-instance shell script.

cd $SRC_TREE_DIR
if [ -L kill-instance.{{ instance_name }}.sh ] 
then
	unlink kill-instance.{{ instance_name }}.sh
	echo "Deleted file: kill-instance.{{ instance_name }}.sh"
fi

# Cleanup and exit.

echo ""
echo "###############################################################################"
{% if count > 1 %}
echo "##    Finished deleting EC2 instance family: {{ instance_name }}"
echo "##                           Instance count: {{ count }}"
{% else %}
echo "##           Finished deleting EC2 instance: {{ instance_name }}"
{% endif %}
echo "###############################################################################"
echo ""
echo "Exiting..."
exit 0
